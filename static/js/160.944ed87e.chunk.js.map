{"version":3,"file":"static/js/160.944ed87e.chunk.js","mappings":"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","sources":["components/ListMovies/ListMovies.styled.jsx","components/ListItem/ListItem.js","components/ListMovies/ListMovies.js","components/MovieDetails/SearchForm/SearchForm.styled.js","components/MovieDetails/SearchForm/SearchForm.js","pages/MoviesPages.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  /* width: 30%; */\n  /* max-width: 20%; */\n  max-width: 300px;\n  height: auto;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  box-sizing: border-box;\n`;\n","// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import NoImage from '../../image/NoImage.svg.png';\n// import { Container, Rating } from '@mui/material';\n\n// function ListItem({ movie, location }) {\n//   const {\n//     title,\n//     name,\n//     id,\n//     poster_path,\n//     vote_average,\n//     release_date,\n//     first_air_date,\n//   } = movie;\n//   console.log(vote_average);\n//   return (\n//     <>\n//       <div>\n//         {poster_path ? (\n//           <img\n//             src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n//             width={`80`}\n//             alt=\"preview\"\n//           />\n//         ) : (\n//           <img src={NoImage} width={`50`} alt=\"preview\" />\n//         )}\n//       </div>\n//       <div>\n//         <Link to={`/movies/${id}`} state={{ from: location }}>\n//           {title || name}\n//         </Link>{' '}\n//         <p> {first_air_date || release_date}</p>\n//         <Rating\n//           name=\"size-small\"\n//           defaultValue={vote_average / 2}\n//           precision={0.5}\n//           readOnly\n//           size=\"small\"\n//         />\n//       </div>\n//     </>\n//   );\n// }\n\n// export default ListItem;\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea, Rating } from '@mui/material';\nimport NoImage from '../../image/NoImage.svg.png';\nimport { Link } from 'react-router-dom';\n\nfunction ListMovie({ movie, location }) {\n  const {\n    title,\n    name,\n    id,\n    poster_path,\n    vote_average,\n    release_date,\n    first_air_date,\n  } = movie;\n  let shortTitle;\n\n  if (title) {\n    shortTitle = title.length <= 15 ? title : `${title.slice(0, 15)} ...`;\n  }\n\n  let shortName;\n  if (name) {\n    shortName = name?.length <= 15 ? name : `${name.slice(0, 15)} ...`;\n  }\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <Card sx={{ maxWidth: 345 }}>\n        <CardActionArea>\n          {poster_path ? (\n            <CardMedia\n              component=\"img\"\n              height=\"auto\"\n              image={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt=\"green iguana\"\n            />\n          ) : (\n            <img src={NoImage} alt=\"preview\" />\n          )}\n\n          <CardContent sx={{ height: 80 }}>\n            <Typography gutterBottom variant=\"h5\">\n              {shortName || shortTitle}\n            </Typography>\n\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {first_air_date || release_date}\n            </Typography>\n            <Rating\n              name=\"size-small\"\n              defaultValue={vote_average / 2}\n              precision={0.5}\n              readOnly\n              size=\"small\"\n            />\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  );\n}\nexport default ListMovie;\n\n// console.log(vote_average);\n// return (\n//   <>\n//     <div>\n//       {poster_path ? (\n//         <img\n//           src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n//           width={`80`}\n//           alt=\"preview\"\n//         />\n//       ) : (\n//         <img src={NoImage} width={`50`} alt=\"preview\" />\n//       )}\n//     </div>\n//     <div>\n//       <Link to={`/movies/${id}`} state={{ from: location }}>\n//         {title || name}\n//       </Link>{' '}\n//       <p> {first_air_date || release_date}</p>\n//       <Rating\n//         name=\"size-small\"\n//         defaultValue={vote_average / 2}\n//         precision={0.5}\n//         readOnly\n//         size=\"small\"\n//       />\n//     </div>\n//   </>\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Item, List } from './ListMovies.styled';\nimport ListMovie from 'components/ListItem/ListItem';\n\nexport default function ListMovies({ movies }) {\n  const location = useLocation();\n  return (\n    <>\n      {Array.isArray(movies) ? (\n        <List>\n          {movies.map(movie => (\n            <Item key={movie.id}>\n              <ListMovie movie={movie} location={location} />\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>Try again</p>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  position: relative;\n  max-width: 300px;\n  margin-top: 0;\n  margin-right: 4px;\n\n  > input {\n    width: 280px;\n    display: block;\n    padding: 10px 14px;\n    font-size: 12px;\n    line-height: 1.17;\n    /* border: 0; */\n    border-radius: 4px;\n    transition: all 0.35s ease-out;\n    margin: 0;\n  }\n\n  > button {\n    margin: 0;\n    font-family: inherit;\n    font-size: 100%;\n    line-height: 1.15;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    top: 0;\n    right: 0;\n    width: 38px;\n    height: 38px;\n    border: 0;\n    border-radius: 100px;\n    cursor: pointer;\n    background-color: rgba(0, 0, 0, 0);\n    border-radius: 100px;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.35s ease-out;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport { CiSearch } from 'react-icons/ci';\nimport { Container, SearchForm } from './SearchForm.styled';\nconst SearchFormInput = ({ ClickOnButton }) => {\n  return (\n    <Container>\n      <SearchForm onSubmit={ClickOnButton}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">\n          <CiSearch />\n        </button>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default SearchFormInput;\n","import ListMovies from 'components/ListMovies/ListMovies';\nimport React, { Suspense } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/movieApi';\nimport SearchFormInput from 'components/MovieDetails/SearchForm/SearchForm';\n\nconst MoviesPages = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    try {\n      getMovieByName(query).then(setMovies);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [query]);\n\n  const ClickOnButton = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchName = form.elements.query.value;\n    if (searchName === '') {\n      toast.warn('Try again');\n      return setSearchParams({});\n    }\n    setSearchParams({ query: searchName });\n    form.reset();\n  };\n  console.log(movies);\n  return (\n    <div>\n      <SearchFormInput onSubmit={ClickOnButton} />\n      <ToastContainer />\n      {query && <ListMovies movies={movies.results} />}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesPages;\n"],"names":["List","styled","Item","shortTitle","shortName","movie","location","title","name","id","poster_path","vote_average","release_date","first_air_date","length","slice","to","state","from","Card","sx","maxWidth","CardActionArea","CardMedia","component","height","image","alt","src","NoImage","CardContent","Typography","gutterBottom","variant","color","Rating","defaultValue","precision","readOnly","size","ListMovies","movies","useLocation","Array","isArray","map","SearchForm","Container","ClickOnButton","onSubmit","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovieByName","then","error","console","log","message","e","preventDefault","form","currentTarget","searchName","elements","value","toast","reset","results","Suspense","fallback"],"sourceRoot":""}