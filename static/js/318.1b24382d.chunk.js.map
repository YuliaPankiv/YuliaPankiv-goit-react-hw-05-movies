{"version":3,"file":"static/js/318.1b24382d.chunk.js","mappings":"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","sources":["components/MovieDetails/Slider/Controls/Arrows.js","components/MovieDetails/Slider/widgets/SlideTitle.js","components/MovieDetails/Slider/widgets/SlideImage.js","components/MovieDetails/Slider/widgets/Slide.js","components/MovieDetails/Slider/widgets/SlideList.js","components/MovieDetails/Slider/Controls/Dot.js","components/MovieDetails/Slider/Controls/Dots.js","components/MovieDetails/Slider/Slider.js","components/MovieDetails/Cast/Cast.js","services/movieApi.js"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport '../styles.scss';\nimport { SliderContext } from '../Slider';\n\nexport default function Arrows() {\n  const { changeSlide } = useContext(SliderContext);\n\n  return (\n    <div className=\"arrows\">\n      <div className=\"arrow left\" onClick={() => changeSlide(-1)} />\n      <div className=\"arrow right\" onClick={() => changeSlide(1)} />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport '../styles.scss';\n\nexport default function SlideTitle({ title }) {\n  return <div className=\"slide-title\">{title}</div>;\n}\n","import React from 'react';\n\nimport '../styles.scss';\n\nexport default function SlideImage({ src, alt }) {\n  return <img src={src} alt={alt} className=\"slide-image\" />;\n}\n","import React from 'react';\nimport SlideTitle from './SlideTitle';\nimport SlideImage from './SlideImage';\n\nimport '../styles.scss';\n\nexport default function Slide({ data: { profile_path, name, character } }) {\n  return (\n    <>\n      {profile_path && (\n        <div className=\"slide\">\n          <SlideImage\n            src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n            alt={name}\n            width={50}\n          />\n\n          <SlideTitle title={name} />\n          <SlideTitle title={`Character: ${character}`} />\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport Slide from './Slide';\nimport { SliderContext } from '../Slider';\n\nimport '../styles.scss';\n\nexport default function SlidesList() {\n  const { slideNumber, items } = useContext(SliderContext);\n  return (\n    <div\n      className=\"slide-list\"\n      style={{ transform: `translateX(-${slideNumber * 100}%)` }}\n    >\n      {items && items.map((slide, index) => <Slide key={index} data={slide} />)}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport '../styles.scss';\nimport { SliderContext } from '../Slider';\n\nexport default function Dot({ number }) {\n  const { goToSlide, slideNumber } = useContext(SliderContext);\n\n  return (\n    <div\n      className={`dot ${slideNumber === number ? 'selected' : ''}`}\n      onClick={() => goToSlide(number)}\n    />\n  );\n}\n","import React, { useContext } from 'react';\n\nimport '../styles.scss';\nimport { SliderContext } from '../Slider';\nimport Dot from './Dot';\n\nexport default function Dots() {\n  const { slidesCount } = useContext(SliderContext);\n\n  const renderDots = () => {\n    const dots = [];\n    for (let i = 0; i < slidesCount; i++) {\n      dots.push(<Dot key={`dot-${i}`} number={i} />);\n    }\n\n    return dots;\n  };\n\n  return <div className=\"dots\">{renderDots()}</div>;\n}\n","import React, { useEffect, useState, createContext, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Arrows from './Controls/Arrows';\nimport SlidesList from './widgets/SlideList';\nimport Dots from './Controls/Dots';\n\nexport const SliderContext = createContext();\n\nconst Slider = function ({ width, height, autoPlay, autoPlayTime, movie }) {\n  const [items, setItems] = useState([]);\n  const [slide, setSlide] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n  const { cast } = movie;\n  useEffect(() => {\n    if (cast) {\n      const loadData = async () => {\n        const images = await cast.filter(({ profile_path }) => profile_path);\n\n        setItems(images);\n      };\n      loadData();\n    }\n  }, [cast]);\n\n  const changeSlide = useCallback(\n    (direction = 1) => {\n      let slideNumber = 0;\n\n      if (slide + direction < 0) {\n        slideNumber = items.length - 1;\n      } else {\n        slideNumber = (slide + direction) % items.length;\n      }\n\n      setSlide(slideNumber);\n    },\n    [items.length, slide]\n  );\n\n  const goToSlide = number => {\n    setSlide(number % items.length);\n  };\n\n  const handleTouchStart = e => {\n    const touchDown = e.touches[0].clientX;\n\n    setTouchPosition(touchDown);\n  };\n\n  const handleTouchMove = e => {\n    if (touchPosition === null) {\n      return;\n    }\n\n    const currentPosition = e.touches[0].clientX;\n    const direction = touchPosition - currentPosition;\n\n    if (direction > 10) {\n      changeSlide(1);\n    }\n\n    if (direction < -10) {\n      changeSlide(-1);\n    }\n\n    setTouchPosition(null);\n  };\n\n  useEffect(() => {\n    if (!autoPlay) return;\n\n    const interval = setInterval(() => {\n      changeSlide(1);\n    }, autoPlayTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [autoPlay, autoPlayTime, changeSlide, items.length, slide]); // when images uploaded or slide changed manually we start timer\n\n  return (\n    <div\n      style={{ width, height }}\n      className=\"slider\"\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n    >\n      <SliderContext.Provider\n        value={{\n          goToSlide,\n          changeSlide,\n          slidesCount: items.length,\n          slideNumber: slide,\n          items,\n        }}\n      >\n        {items.length > 0 && (\n          <>\n            <Arrows />\n            <SlidesList />\n            <Dots />\n          </>\n        )}\n      </SliderContext.Provider>\n    </div>\n  );\n};\n\nSlider.propTypes = {\n  autoPlay: PropTypes.bool,\n  autoPlayTime: PropTypes.number,\n  width: PropTypes.string,\n  height: PropTypes.string,\n};\n\nSlider.defaultProps = {\n  autoPlay: false,\n  autoPlayTime: 3000,\n  width: '100%',\n  height: '100%',\n};\n\nexport default Slider;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/movieApi';\nimport Slider from '../Slider/Slider';\n\nfunction Cast() {\n  const { id } = useParams();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getMovieCredits(id).then(setMovies);\n  }, [id]);\n  const { cast } = movies;\n  return (\n    <>\n      {cast && <Slider movie={movies} />}\n      {/* <List>\n        <div cast={cast} />\n        {cast &&\n          cast.map(({ id, name, character, profile_path }) => (\n            <li key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                  alt=\"img\"\n                  width={100}\n                />\n              ) : (\n                <img src={NoImage} alt=\"preview\" width={100} />\n              )}\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n      </List> */}\n    </>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c5d5f3c7e995d560efb7f68509bca849',\n    language: 'en-US',\n    page: '1',\n  },\n});\n\nexport async function getTrendingMovies(page = 1) {\n  const query = 'trending/all/day';\n\n  try {\n    const { data } = await instance.get(`${query}`, {\n      params: { page: page },\n    });\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieById(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieByName(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCredits(movie_id) {\n  const query = `/movie/${movie_id}/credits`;\n  // https://api.themoviedb.org/3/movie/movie_id/images\n\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  const query = `/movie/${movie_id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["Arrows","changeSlide","useContext","SliderContext","className","onClick","SlideTitle","title","SlideImage","src","alt","Slide","data","profile_path","name","character","width","SlidesList","slideNumber","items","style","transform","map","slide","index","Dot","number","goToSlide","Dots","slidesCount","dots","i","push","renderDots","createContext","Slider","height","autoPlay","autoPlayTime","movie","useState","setItems","setSlide","touchPosition","setTouchPosition","cast","useEffect","loadData","filter","images","useCallback","direction","length","interval","setInterval","clearInterval","onTouchStart","e","touchDown","touches","clientX","onTouchMove","currentPosition","Provider","value","defaultProps","id","useParams","movies","setMovies","getMovieCredits","then","instance","axios","baseURL","params","api_key","language","page","getTrendingMovies","query","get","console","log","getMovieById","getMovieByName","queryString","movie_id","getMovieReviews"],"sourceRoot":""}