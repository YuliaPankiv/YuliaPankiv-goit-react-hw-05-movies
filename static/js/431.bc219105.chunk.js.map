{"version":3,"file":"static/js/431.bc219105.chunk.js","mappings":"0OAEaA,E,QAAYC,EAAAA,IAAH,6F,0DCCTC,EAAkB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnD,OACE,SAACC,EAAA,EAAD,YACKH,IACD,SAACI,EAAA,EAAD,CACEC,MAAOL,EACPC,OAAQA,EACRC,KAAMA,EAENI,GAAI,CAAEC,QAAS,EAAGC,QAAS,QAC3BC,iBAAe,EACfC,gBAAc,EACdC,WAAY,SAAAC,GAAI,OACd,SAACC,EAAA,GAAD,QACEC,UAAWC,EAAAA,GACXC,GAAE,iBAAYJ,EAAKV,OACfU,GAJQ,KAWzB,EC8BD,EAjDkB,SAAAK,GAAU,IAAD,EACzB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,UAAS,GAA3C,eAAOlB,EAAP,KAAkBoB,EAAlB,KAEA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,EAAW,UAAGC,OAAOF,EAAaG,IAAI,gBAA3B,QAAuC,EACxDC,QAAQC,IAAIJ,GAEZ,IAAMK,EAA6B,IAAhBL,EAAoB,EAAIA,EAqB3C,OAnBAM,EAAAA,EAAAA,YAAU,WACR,IACET,GAAW,IACXU,EAAAA,EAAAA,IAAkBF,GAAYG,MAAK,SAAAC,GACjCf,EAAUe,EAAIC,SACdf,EAAac,EAAIE,aACjBd,GAAW,EACZ,GAGF,CAFC,MAAOe,GACPT,QAAQC,IAAIQ,EAAMC,QACnB,CACF,GAAE,CAACb,EAAaK,KASf,UAACjC,EAAD,YACE,4CACA,SAACE,EAAD,CACEC,UAAWA,EACXC,OAAQA,EACRC,KAAM4B,KAGR,SAACS,EAAA,EAAD,CAAYtC,OAAQA,EAAQoB,QAASA,KACrC,SAACtB,EAAD,CACEC,UAAWA,EACXC,OAAQA,EACRC,KAAM4B,MAIb,C","sources":["pages/Container.styled.js","components/Pagination/Pagination.js","pages/HomePages.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Pagination, PaginationItem, Stack } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nexport const PaginationMovie = ({ totalPage, movies, page }) => {\n  return (\n    <Stack>\n      {!!totalPage && (\n        <Pagination\n          count={totalPage}\n          movies={movies}\n          page={page}\n          // onChange={(_, num) => setPage(num)}\n          sx={{ marginY: 3, marginX: 'auto' }}\n          showFirstButton\n          showLastButton\n          renderItem={item => (\n            <PaginationItem\n              component={NavLink}\n              to={`/?page=${item.page}`}\n              {...item}\n            />\n          )}\n        />\n      )}\n    </Stack>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/movieApi';\nimport ListMovies from 'components/ListMovies/ListMovies';\n// import { PaginationI } from 'components/Pagination/Pagination';\nimport { Container } from './Container.styled';\nimport { PaginationMovie } from 'components/Pagination/Pagination';\nimport { useSearchParams } from 'react-router-dom';\nconst HomePages = props => {\n  const [movies, setMovies] = useState([]);\n  const [totalPage, setTotalPage] = useState(0);\n  // const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const currentPage = Number(searchParams.get('page')) ?? 1;\n  console.log(currentPage);\n  // const [moviePerPage] = useState(50);\n  const searchPage = currentPage === 0 ? 1 : currentPage;\n\n  useEffect(() => {\n    try {\n      setLoading(true);\n      getTrendingMovies(searchPage).then(res => {\n        setMovies(res.results);\n        setTotalPage(res.total_pages);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [currentPage, searchPage]);\n  // const lastMovieIndex = currentPage * moviePerPage;\n  // const firstMovieIndex = lastMovieIndex - moviePerPage;\n  // const currentMovie = movies.slice(firstMovieIndex, lastMovieIndex);\n\n  // const paginate = pageNumber => {\n  //   setCurrentPage(pageNumber);\n  // };\n  return (\n    <Container>\n      <h2>Trending Today</h2>\n      <PaginationMovie\n        totalPage={totalPage}\n        movies={movies}\n        page={searchPage}\n        // setPage={setPage}\n      />\n      <ListMovies movies={movies} loading={loading} />\n      <PaginationMovie\n        totalPage={totalPage}\n        movies={movies}\n        page={searchPage}\n      />\n    </Container>\n  );\n};\n\nexport default HomePages;\n"],"names":["Container","styled","PaginationMovie","totalPage","movies","page","Stack","Pagination","count","sx","marginY","marginX","showFirstButton","showLastButton","renderItem","item","PaginationItem","component","NavLink","to","props","useState","setMovies","setTotalPage","loading","setLoading","useSearchParams","searchParams","currentPage","Number","get","console","log","searchPage","useEffect","getTrendingMovies","then","res","results","total_pages","error","message","ListMovies"],"sourceRoot":""}