{"version":3,"file":"static/js/160.b8f09b06.chunk.js","mappings":"uSAEaA,EAAaC,EAAAA,EAAAA,KAAH,+yBAwCVC,EAAYD,EAAAA,EAAAA,IAAH,sE,SC1BtB,EAbwB,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,cACzB,OACE,SAACD,EAAD,WACE,UAACF,EAAD,CAAYI,SAAUD,EAAtB,WACE,kBAAOE,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,UACE,SAAC,MAAD,UAKT,ECiCD,EAtCoB,WAClB,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EACL,KACEG,EAAAA,EAAAA,IAAeH,GAAOI,KAAKR,EAG5B,CAFC,MAAOS,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACR,IAcJ,OADAM,QAAQC,IAAIZ,IAEV,4BACE,SAAC,EAAD,CAAiBJ,SAdC,SAAAkB,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAaF,EAAKG,SAASd,MAAMe,MACvC,GAAmB,KAAfF,EAEF,OADAG,EAAAA,GAAAA,KAAW,aACJjB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOa,IACzBF,EAAKM,OACN,KAKG,SAAC,KAAD,IACCjB,IAAS,SAACkB,EAAA,EAAD,CAAYvB,OAAQA,EAAOwB,WACrC,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/SearchForm/SearchForm.styled.js","components/MovieDetails/SearchForm/SearchForm.js","pages/MoviesPages.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  position: relative;\n  max-width: 300px;\n  margin-top: 0;\n  margin-right: 4px;\n\n  > input {\n    width: 280px;\n    display: block;\n    padding: 10px 14px;\n    font-size: 12px;\n    line-height: 1.17;\n    /* border: 0; */\n    border-radius: 4px;\n    transition: all 0.35s ease-out;\n    margin: 0;\n  }\n\n  > button {\n    margin: 0;\n    font-family: inherit;\n    font-size: 100%;\n    line-height: 1.15;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    top: 0;\n    right: 0;\n    width: 38px;\n    height: 38px;\n    border: 0;\n    border-radius: 100px;\n    cursor: pointer;\n    background-color: rgba(0, 0, 0, 0);\n    border-radius: 100px;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.35s ease-out;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport { CiSearch } from 'react-icons/ci';\nimport { Container, SearchForm } from './SearchForm.styled';\nconst SearchFormInput = ({ ClickOnButton }) => {\n  return (\n    <Container>\n      <SearchForm onSubmit={ClickOnButton}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">\n          <CiSearch />\n        </button>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default SearchFormInput;\n","import ListMovies from 'components/ListMovies/ListMovies';\nimport React, { Suspense } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/movieApi';\nimport SearchFormInput from 'components/MovieDetails/SearchForm/SearchForm';\n\nconst MoviesPages = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    try {\n      getMovieByName(query).then(setMovies);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [query]);\n\n  const ClickOnButton = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchName = form.elements.query.value;\n    if (searchName === '') {\n      toast.warn('Try again');\n      return setSearchParams({});\n    }\n    setSearchParams({ query: searchName });\n    form.reset();\n  };\n  console.log(movies);\n  return (\n    <div>\n      <SearchFormInput onSubmit={ClickOnButton} />\n      <ToastContainer />\n      {query && <ListMovies movies={movies.results} />}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesPages;\n"],"names":["SearchForm","styled","Container","ClickOnButton","onSubmit","type","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovieByName","then","error","console","log","message","e","preventDefault","form","currentTarget","searchName","elements","value","toast","reset","ListMovies","results","Suspense","fallback"],"sourceRoot":""}