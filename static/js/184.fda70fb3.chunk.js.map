{"version":3,"file":"static/js/184.fda70fb3.chunk.js","mappings":"mMA4BA,UAxBA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA2BE,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,MACAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAAIO,KAAKH,EAC1B,GAAE,CAACJ,IACJ,IAAQQ,EAAYL,EAAZK,QAER,OACE,+BACU,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASC,QAAS,EACjBD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASZ,EAApB,EAAoBA,GAApB,OACV,4BACE,qCAAaW,MACb,uBAAIC,MAFIZ,EADA,KAOZ,0EAIP,C,yLCxBKa,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,KAAM,OAIH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAAiCD,EAAjC,+BAAwC,EACvCE,EAAQ,mBADT,kBAIoBR,EAASS,IAAT,UAAgBD,GAAS,CAC9CL,OAAQ,CAAEG,KAAMA,KALf,uBAIKI,EAJL,EAIKA,KAGRC,QAAQC,IAAIF,GAPT,kBAQIA,GARJ,+HAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,kFACCqB,EADD,iBACmBrB,GADnB,kBAGoBa,EAASS,IAAID,GAHjC,uBAGKE,EAHL,EAGKA,KACRC,QAAQC,IAAIF,GAJT,kBAKIA,GALJ,8HAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACCP,EADD,8BACgCO,GADhC,kBAGoBf,EAASS,IAAID,GAHjC,uBAGKE,EAHL,EAGKA,KAHL,kBAKIA,GALJ,2HAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCT,EADD,iBACmBS,EADnB,8BAKoBjB,EAASS,IAAID,GALjC,uBAKKE,EALL,EAKKA,KALL,kBAMIA,GANJ,2HAYA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BwB,GAA/B,kFACCT,EADD,iBACmBS,EADnB,8BAGoBjB,EAASS,IAAID,GAHjC,uBAGKE,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H","sources":["components/MovieDetails/Rerviews/Rerviews.js","services/movieApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movieApi';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const [movie, setMovies] = useState([]);\n  useEffect(() => {\n    getMovieReviews(id).then(setMovies);\n  }, [id]);\n  const { results } = movie;\n\n  return (\n    <>\n      {results?.length > 0 ? (\n        results.map(({ author, content, id }) => (\n          <div key={id}>\n            <h5>Author: {author}</h5>\n            <p>{content}</p>\n          </div>\n        ))\n      ) : (\n        <p>There are currently no reviews for this film.</p>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c5d5f3c7e995d560efb7f68509bca849',\n    language: 'en-US',\n    page: '1',\n  },\n});\n\nexport async function getTrendingMovies(page = 1) {\n  const query = 'trending/all/day';\n\n  try {\n    const { data } = await instance.get(`${query}`, {\n      params: { page: page },\n    });\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieById(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieByName(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCredits(movie_id) {\n  const query = `/movie/${movie_id}/credits`;\n  // https://api.themoviedb.org/3/movie/movie_id/images\n\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  const query = `/movie/${movie_id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["id","useParams","useState","movie","setMovies","useEffect","getMovieReviews","then","results","length","map","author","content","instance","axios","baseURL","params","api_key","language","page","getTrendingMovies","query","get","data","console","log","getMovieById","getMovieByName","queryString","getMovieCredits","movie_id"],"sourceRoot":""}