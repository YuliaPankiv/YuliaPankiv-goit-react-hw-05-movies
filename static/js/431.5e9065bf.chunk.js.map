{"version":3,"file":"static/js/431.5e9065bf.chunk.js","mappings":"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","sources":["components/ListMovies/ListMovies.styled.jsx","components/ListItem/ListItem.js","components/ListMovies/ListMovies.js","pages/Container.styled.js","components/Pagination/Pagination.js","pages/HomePages.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  /* width: 30%; */\n  /* max-width: 20%; */\n  max-width: 300px;\n  height: auto;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  box-sizing: border-box;\n`;\n","// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import NoImage from '../../image/NoImage.svg.png';\n// import { Container, Rating } from '@mui/material';\n\n// function ListItem({ movie, location }) {\n//   const {\n//     title,\n//     name,\n//     id,\n//     poster_path,\n//     vote_average,\n//     release_date,\n//     first_air_date,\n//   } = movie;\n//   console.log(vote_average);\n//   return (\n//     <>\n//       <div>\n//         {poster_path ? (\n//           <img\n//             src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n//             width={`80`}\n//             alt=\"preview\"\n//           />\n//         ) : (\n//           <img src={NoImage} width={`50`} alt=\"preview\" />\n//         )}\n//       </div>\n//       <div>\n//         <Link to={`/movies/${id}`} state={{ from: location }}>\n//           {title || name}\n//         </Link>{' '}\n//         <p> {first_air_date || release_date}</p>\n//         <Rating\n//           name=\"size-small\"\n//           defaultValue={vote_average / 2}\n//           precision={0.5}\n//           readOnly\n//           size=\"small\"\n//         />\n//       </div>\n//     </>\n//   );\n// }\n\n// export default ListItem;\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea, Rating } from '@mui/material';\nimport NoImage from '../../image/NoImage.svg.png';\nimport { Link } from 'react-router-dom';\n\nfunction ListMovie({ movie, location }) {\n  const {\n    title,\n    name,\n    id,\n    poster_path,\n    vote_average,\n    release_date,\n    first_air_date,\n  } = movie;\n  let shortTitle;\n\n  if (title) {\n    shortTitle = title.length <= 15 ? title : `${title.slice(0, 15)} ...`;\n  }\n\n  let shortName;\n  if (name) {\n    shortName = name?.length <= 15 ? name : `${name.slice(0, 15)} ...`;\n  }\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <Card sx={{ maxWidth: 345 }}>\n        <CardActionArea>\n          {poster_path ? (\n            <CardMedia\n              component=\"img\"\n              height=\"auto\"\n              image={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt=\"green iguana\"\n            />\n          ) : (\n            <img src={NoImage} alt=\"preview\" />\n          )}\n\n          <CardContent sx={{ height: 80 }}>\n            <Typography gutterBottom variant=\"h5\">\n              {shortName || shortTitle}\n            </Typography>\n\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {first_air_date || release_date}\n            </Typography>\n            <Rating\n              name=\"size-small\"\n              defaultValue={vote_average / 2}\n              precision={0.5}\n              readOnly\n              size=\"small\"\n            />\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  );\n}\nexport default ListMovie;\n\n// console.log(vote_average);\n// return (\n//   <>\n//     <div>\n//       {poster_path ? (\n//         <img\n//           src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n//           width={`80`}\n//           alt=\"preview\"\n//         />\n//       ) : (\n//         <img src={NoImage} width={`50`} alt=\"preview\" />\n//       )}\n//     </div>\n//     <div>\n//       <Link to={`/movies/${id}`} state={{ from: location }}>\n//         {title || name}\n//       </Link>{' '}\n//       <p> {first_air_date || release_date}</p>\n//       <Rating\n//         name=\"size-small\"\n//         defaultValue={vote_average / 2}\n//         precision={0.5}\n//         readOnly\n//         size=\"small\"\n//       />\n//     </div>\n//   </>\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Item, List } from './ListMovies.styled';\nimport ListMovie from 'components/ListItem/ListItem';\n\nexport default function ListMovies({ movies }) {\n  const location = useLocation();\n  return (\n    <>\n      {Array.isArray(movies) ? (\n        <List>\n          {movies.map(movie => (\n            <Item key={movie.id}>\n              <ListMovie movie={movie} location={location} />\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>Try again</p>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Pagination, PaginationItem, Stack } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nexport const PaginationMovie = ({ totalPage, movies, page, setPage }) => {\n  return (\n    <Stack>\n      {!!totalPage && (\n        <Pagination\n          count={totalPage}\n          movies={movies}\n          page={page}\n          onChange={(_, num) => setPage(num)}\n          sx={{ marginY: 3, marginX: 'auto' }}\n          showFirstButton\n          showLastButton\n          renderItem={item => (\n            <PaginationItem\n              component={NavLink}\n              to={`/?page=${item.page}`}\n              {...item}\n            />\n          )}\n        />\n      )}\n    </Stack>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/movieApi';\nimport ListMovies from 'components/ListMovies/ListMovies';\n// import { PaginationI } from 'components/Pagination/Pagination';\nimport { Container } from './Container.styled';\nimport { PaginationMovie } from 'components/Pagination/Pagination';\nconst HomePages = props => {\n  const [movies, setMovies] = useState([]);\n  const [totalPage, setTotalPage] = useState(0);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  // const [moviePerPage] = useState(50);\n\n  useEffect(() => {\n    try {\n      setLoading(true);\n      getTrendingMovies(page).then(res => {\n        setMovies(res.results);\n        setTotalPage(res.total_pages);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [page]);\n  console.log(props);\n  // const lastMovieIndex = currentPage * moviePerPage;\n  // const firstMovieIndex = lastMovieIndex - moviePerPage;\n  // const currentMovie = movies.slice(firstMovieIndex, lastMovieIndex);\n\n  // const paginate = pageNumber => {\n  //   setCurrentPage(pageNumber);\n  // };\n  return (\n    <Container>\n      <h2>Trending Today</h2>\n      <PaginationMovie\n        totalPage={totalPage}\n        movies={movies}\n        page={page}\n        setPage={setPage}\n      />\n      <ListMovies movies={movies} loading={loading} />\n      <PaginationMovie\n        totalPage={totalPage}\n        movies={movies}\n        page={page}\n        setPage={setPage}\n      />\n    </Container>\n  );\n};\n\nexport default HomePages;\n"],"names":["List","styled","Item","shortTitle","shortName","movie","location","title","name","id","poster_path","vote_average","release_date","first_air_date","length","slice","to","state","from","Card","sx","maxWidth","CardActionArea","CardMedia","component","height","image","alt","src","NoImage","CardContent","Typography","gutterBottom","variant","color","Rating","defaultValue","precision","readOnly","size","ListMovies","movies","useLocation","Array","isArray","map","Container","PaginationMovie","totalPage","page","setPage","Stack","Pagination","count","onChange","_","num","marginY","marginX","showFirstButton","showLastButton","renderItem","item","PaginationItem","NavLink","props","useState","setMovies","setTotalPage","loading","setLoading","useEffect","getTrendingMovies","then","res","results","total_pages","error","console","log","message"],"sourceRoot":""}