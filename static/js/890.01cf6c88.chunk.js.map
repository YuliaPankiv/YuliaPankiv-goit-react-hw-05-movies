{"version":3,"file":"static/js/890.01cf6c88.chunk.js","mappings":"4OA8DA,EA1DyB,WAAO,IAAD,IAC7B,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC5CC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAAII,KAAKX,EACvB,GAAE,CAACO,IACJ,IAAQK,EAA6Db,EAA7Da,MAAOC,EAAsDd,EAAtDc,YAAaC,EAAyCf,EAAzCe,KAAMC,EAAmChB,EAAnCgB,SAAUC,EAAyBjB,EAAzBiB,aAAcC,EAAWlB,EAAXkB,OAC1D,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIf,EAAagB,QAAvB,8BACCP,IAAS,wBAAKA,IACdI,IAAgB,wCAAgBA,KAChCD,IACC,iCACE,sCACA,uBAAIA,OAGPE,IACC,iCACE,mCADF,OAEGA,QAFH,IAEGA,OAFH,EAEGA,EAAQG,KAAI,YAAmB,IAAhBb,EAAe,EAAfA,GAAIO,EAAW,EAAXA,KAClB,OAAO,uBAAaA,GAALP,EAChB,OAGJO,IAAQ,wBAAKA,IACbD,GACC,gBACEQ,IAAG,0CAAqCR,GACxCS,MAAK,MACLC,IAAI,aAGN,gBAAKF,I,qoYAAcE,IAAI,aAEzB,4BACE,mBACA,oDACA,2BACE,yBACE,SAAC,KAAD,CAAML,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,2BAGJ,sBAEF,SAAC,EAAAM,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MoviDetailsPages.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/movieApi';\nimport NoImage from '../image/NoImage.svg.png';\nconst MoviDetailsPages = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const { id } = useParams();\n  useEffect(() => {\n    getMovieById(id).then(setMovies);\n  }, [id]);\n  const { title, poster_path, name, overview, vote_average, genres } = movies;\n  return (\n    <>\n      <Link to={backLinkHref.current}>Back to products</Link>\n      {title && <h2>{title}</h2>}\n      {vote_average && <p>User Score: {vote_average}</p>}\n      {overview && (\n        <>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </>\n      )}\n      {genres && (\n        <>\n          <h3>Genres</h3>\n          {genres?.map(({ id, name }) => {\n            return <p key={id}>{name}</p>;\n          })}\n        </>\n      )}\n      {name && <h3>{name}</h3>}\n      {poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          width={`200`}\n          alt=\"preview\"\n        />\n      ) : (\n        <img src={NoImage} alt=\"preview\" />\n      )}\n      <div>\n        <hr />\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviDetailsPages;\n"],"names":["useState","movies","setMovies","location","useLocation","backLinkHref","useRef","state","from","id","useParams","useEffect","getMovieById","then","title","poster_path","name","overview","vote_average","genres","to","current","map","src","width","alt","Suspense","fallback"],"sourceRoot":""}